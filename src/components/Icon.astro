---
import { Image } from 'astro:assets';
const { lightIcon, darkIcon, href } = Astro.props;
---

<a 
  id="themeIcon" 
  class="p-2 rounded-full border hover:bg-gray-800 hover:bg-gray-200 btn-icon"
  href={href}
  target="_blank"
  rel="noopener noreferrer"
>
  <Image src={darkIcon} width="30" height="30" alt="icones para contato." class="dark-icon" />
  <Image src={lightIcon} width="30" height="30" alt="icones para contato." class="light-icon hidden" />
</a>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const themeIconEl = document.getElementById('themeIcon');
    const lightIconEl = themeIconEl.querySelector('.light-icon');
    const darkIconEl = themeIconEl.querySelector('.dark-icon');

    const updateIcon = () => {
      if (document.body.classList.contains('dark-mode')) {
        lightIconEl.classList.add('hidden');
        darkIconEl.classList.remove('hidden');
      } else {
        lightIconEl.classList.remove('hidden');
        darkIconEl.classList.add('hidden');
      }
    };

    updateIcon();

    const observer = new MutationObserver((mutationsList) => {
      mutationsList.forEach((mutation) => {
        if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
          updateIcon();
        }
      });
    });

    observer.observe(document.body, { attributes: true, attributeFilter: ['class'] });
  });
</script>